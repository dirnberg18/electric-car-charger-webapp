{"ast":null,"code":"var _jsxFileName = \"C:\\\\oamk\\\\web-frameworks\\\\charger\\\\react-charger\\\\src\\\\Components\\\\VisitorView.js\";\nimport React from 'react';\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from '@react-google-maps/api';\nimport json from './data/charging-locations.json';\nimport ListLocations from './listLocations.js';\nimport { MdBatteryChargingFull } from \"react-icons/md\";\nconst containerStyle = {\n  width: '100%',\n  height: '500px',\n  display: 'block'\n};\nconst center = {\n  lat: 65.05815,\n  lng: 25.45411\n};\n\nfunction VisitorView() {\n  const [map, setMap] = React.useState(null);\n  const onLoad = React.useCallback(function callback(map) {\n    const bounds = new window.google.maps.LatLngBounds();\n    map.fitBounds(bounds);\n    setMap(map);\n  }, []);\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n  const [SelectedCenter, setSelectedCenter] = React.useState(null);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LoadScript, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 10,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, json.features.map(location => /*#__PURE__*/React.createElement(Marker, {\n    key: location.properties.PARK_ID,\n    position: {\n      lat: location.geometry.coordinates[1],\n      lng: location.geometry.coordinates[0]\n    },\n    onClick: () => {\n      setSelectedCenter(location);\n    },\n    icon: {\n      MdBatteryChargingFull\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(React.Fragment, null), SelectedCenter && /*#__PURE__*/React.createElement(InfoWindow, {\n    onCloseClick: () => {\n      setSelectedCenter(null);\n    },\n    position: {\n      lat: SelectedCenter.geometry.coordinates[1],\n      lng: SelectedCenter.geometry.coordinates[0]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  }, SelectedCenter.properties.NAME), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  }, SelectedCenter.properties.ADDRESS), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }, SelectedCenter.properties.DESCRIPTIO), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 29\n    }\n  }, \"CODE: \", SelectedCenter.properties.ADDRESS_FR))))), /*#__PURE__*/React.createElement(ListLocations, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }));\n}\n\nexport default React.memo(VisitorView);\n/*import React from 'react';\r\nimport {\r\n    GoogleMap, \r\n    withScriptjs, \r\n    withGoogleMap, \r\n    Marker\r\n} from \"react-google-maps\";\r\nimport * as locationsData from \"./charging-locations.json\";\r\n\r\nfunction Map() {\r\n    return (\r\n        <GoogleMap \r\n        defaultZoom={10} \r\n        defaultCenter={{lat: 65.05815, lng: 25.45411}}\r\n        >\r\n        {locationsData.features.map((location) => (\r\n            <Marker \r\n                key={location.properties.PARK_ID} \r\n                position={{\r\n                    lat: location.geometry.coordinates[1],\r\n                    lng: location.geometry.coordinates[0]\r\n                }}\r\n            />\r\n        ))}\r\n        </GoogleMap>\r\n    );\r\n}\r\n\r\nconst WrappedMap = withScriptjs(withGoogleMap(Map));\r\n\r\nexport default function VisitorView() {\r\n    return (\r\n    <div>\r\n        <div>\r\n            <h1>Hallo Marlene</h1>\r\n        </div>\r\n        <div>\r\n        <WrappedMap \r\n        googleMapURL = {`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places`}\r\n        loadingElement = {<div style= {{height: `100%`}}/>}\r\n        containerElement = {<div style= {{height: `400%`}}/>}\r\n        mapElement = {<div style= {{height: `100%`}}/>}\r\n        />\r\n        </div>\r\n    </div>\r\n    )\r\n  }*/","map":{"version":3,"sources":["C:/oamk/web-frameworks/charger/react-charger/src/Components/VisitorView.js"],"names":["React","GoogleMap","LoadScript","Marker","InfoWindow","json","ListLocations","MdBatteryChargingFull","containerStyle","width","height","display","center","lat","lng","VisitorView","map","setMap","useState","onLoad","useCallback","callback","bounds","window","google","maps","LatLngBounds","fitBounds","onUnmount","SelectedCenter","setSelectedCenter","features","location","properties","PARK_ID","geometry","coordinates","NAME","ADDRESS","DESCRIPTIO","ADDRESS_FR","memo"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from '@react-google-maps/api';\r\nimport json from './data/charging-locations.json';\r\nimport ListLocations from './listLocations.js';\r\nimport {MdBatteryChargingFull} from \"react-icons/md\";\r\n\r\n\r\n \r\nconst containerStyle = {\r\n  width: '100%',\r\n  height: '500px',\r\n  display: 'block'\r\n};\r\n \r\nconst center = {\r\n  lat: 65.05815,\r\n  lng: 25.45411\r\n};\r\n \r\nfunction VisitorView() {\r\n  const [map, setMap] = React.useState(null)\r\n \r\n  const onLoad = React.useCallback(function callback(map) {\r\n    const bounds = new window.google.maps.LatLngBounds();\r\n    map.fitBounds(bounds);\r\n    setMap(map)\r\n  }, [])\r\n \r\n  const onUnmount = React.useCallback(function callback(map) {\r\n    setMap(null)\r\n  }, [])\r\n\r\n  const [SelectedCenter, setSelectedCenter] = React.useState(null)\r\n \r\n  return (\r\n    <div>\r\n    <LoadScript>\r\n      <GoogleMap\r\n        mapContainerStyle={containerStyle}\r\n        center={center}\r\n        zoom={10}\r\n        onLoad={onLoad}\r\n        onUnmount={onUnmount}\r\n      >\r\n          {json.features.map((location) => (\r\n            <Marker \r\n                key={location.properties.PARK_ID} \r\n                position={{\r\n                    lat: location.geometry.coordinates[1],\r\n                    lng: location.geometry.coordinates[0]\r\n                }}\r\n\r\n                onClick={() => {\r\n                    setSelectedCenter(location);\r\n                }}\r\n                icon= {{\r\n                  MdBatteryChargingFull\r\n                }}\r\n\r\n\r\n                /> \r\n                ))}\r\n<></>\r\n                {SelectedCenter && (\r\n                    <InfoWindow\r\n                        onCloseClick={() => {\r\n                            setSelectedCenter(null);\r\n                        }}\r\n                        position={{\r\n                            lat: SelectedCenter.geometry.coordinates[1],\r\n                            lng: SelectedCenter.geometry.coordinates[0]\r\n                        }}\r\n                    >\r\n                        <div>\r\n                            <h2>{SelectedCenter.properties.NAME}</h2>\r\n                            <p>{SelectedCenter.properties.ADDRESS}</p>\r\n                            <p>{SelectedCenter.properties.DESCRIPTIO}</p>\r\n                            <h4>CODE: {SelectedCenter.properties.ADDRESS_FR}</h4>\r\n\r\n                        </div>\r\n                    </InfoWindow>\r\n                     )}\r\n      </GoogleMap>\r\n    </LoadScript>\r\n    <ListLocations />\r\n    </div>\r\n\r\n  )\r\n}\r\n \r\nexport default React.memo(VisitorView)\r\n\r\n\r\n\r\n\r\n/*import React from 'react';\r\nimport {\r\n    GoogleMap, \r\n    withScriptjs, \r\n    withGoogleMap, \r\n    Marker\r\n} from \"react-google-maps\";\r\nimport * as locationsData from \"./charging-locations.json\";\r\n\r\nfunction Map() {\r\n    return (\r\n        <GoogleMap \r\n        defaultZoom={10} \r\n        defaultCenter={{lat: 65.05815, lng: 25.45411}}\r\n        >\r\n        {locationsData.features.map((location) => (\r\n            <Marker \r\n                key={location.properties.PARK_ID} \r\n                position={{\r\n                    lat: location.geometry.coordinates[1],\r\n                    lng: location.geometry.coordinates[0]\r\n                }}\r\n            />\r\n        ))}\r\n        </GoogleMap>\r\n    );\r\n}\r\n\r\nconst WrappedMap = withScriptjs(withGoogleMap(Map));\r\n\r\nexport default function VisitorView() {\r\n    return (\r\n    <div>\r\n        <div>\r\n            <h1>Hallo Marlene</h1>\r\n        </div>\r\n        <div>\r\n        <WrappedMap \r\n        googleMapURL = {`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places`}\r\n        loadingElement = {<div style= {{height: `100%`}}/>}\r\n        containerElement = {<div style= {{height: `400%`}}/>}\r\n        mapElement = {<div style= {{height: `100%`}}/>}\r\n        />\r\n        </div>\r\n    </div>\r\n    )\r\n  }*/"]},"metadata":{},"sourceType":"module"}