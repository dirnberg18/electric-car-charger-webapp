{"ast":null,"code":"import axios from 'axios';\nimport constants from './constants.json';\nlet userInfo = {\n  username: null,\n  password: null\n};\nlet myAuth = {\n  authenticateLocal: (username, password) => {\n    return new Promise((resolve, reject) => {\n      if (username == \"test\" && password == \"test\") {\n        resolve();\n      } else {\n        reject();\n      }\n    });\n  },\n  authenticate: (username, password) => {\n    return new Promise((resolve, reject) => {\n      axios.post(constants.baseAddress + '/login', {}, {\n        auth: {\n          username: username,\n          password: password\n        }\n      }).then(result => {\n        userInfo = {\n          username: username,\n          password: password\n        };\n        resolve();\n      }).catch(error => {\n        console.log(error);\n        reject();\n      });\n    });\n  },\n  getAxiosAuth: () => {\n    return {\n      auth: userInfo\n    };\n  }\n};\nexport default myAuth;","map":{"version":3,"sources":["C:/oamk/web-frameworks/charger/react-charger/src/Components/authentication/Auth.js"],"names":["axios","constants","userInfo","username","password","myAuth","authenticateLocal","Promise","resolve","reject","authenticate","post","baseAddress","auth","then","result","catch","error","console","log","getAxiosAuth"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AAEA,IAAIC,QAAQ,GAAG;AACbC,EAAAA,QAAQ,EAAE,IADG;AAEbC,EAAAA,QAAQ,EAAE;AAFG,CAAf;AAKA,IAAIC,MAAM,GAAG;AACTC,EAAAA,iBAAiB,EAAE,CAACH,QAAD,EAAWC,QAAX,KAAwB;AACzC,WAAO,IAAIG,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,UAAGN,QAAQ,IAAI,MAAZ,IAAsBC,QAAQ,IAAI,MAArC,EAA6C;AAC3CI,QAAAA,OAAO;AACR,OAFD,MAGK;AACHC,QAAAA,MAAM;AACP;AACF,KAPM,CAAP;AAQD,GAVQ;AAWTC,EAAAA,YAAY,EAAE,CAACP,QAAD,EAAWC,QAAX,KAAwB;AACpC,WAAO,IAAIG,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCT,MAAAA,KAAK,CAACW,IAAN,CAAWV,SAAS,CAACW,WAAV,GAAwB,QAAnC,EAA6C,EAA7C,EACE;AACIC,QAAAA,IAAI,EAAE;AACNV,UAAAA,QAAQ,EAAEA,QADJ;AAENC,UAAAA,QAAQ,EAAEA;AAFJ;AADV,OADF,EAOGU,IAPH,CAOQC,MAAM,IAAI;AACdb,QAAAA,QAAQ,GAAG;AACTC,UAAAA,QAAQ,EAAEA,QADD;AAETC,UAAAA,QAAQ,EAAEA;AAFD,SAAX;AAIAI,QAAAA,OAAO;AACR,OAbH,EAcGQ,KAdH,CAcSC,KAAK,IACV;AACEC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAR,QAAAA,MAAM;AACP,OAlBL;AAoBD,KArBM,CAAP;AAsBD,GAlCQ;AAmCTW,EAAAA,YAAY,EAAE,MAAM;AAClB,WAAO;AACLP,MAAAA,IAAI,EAAEX;AADD,KAAP;AAGD;AAvCQ,CAAb;AA0CA,eAAeG,MAAf","sourcesContent":["import axios from 'axios';\r\nimport constants from './constants.json';\r\n\r\nlet userInfo = {\r\n  username: null,\r\n  password: null\r\n}\r\n\r\nlet myAuth = {\r\n    authenticateLocal: (username, password) => {\r\n      return new Promise((resolve, reject) => {\r\n        if(username == \"test\" && password == \"test\") {\r\n          resolve();\r\n        }\r\n        else {\r\n          reject();\r\n        }\r\n      });\r\n    },\r\n    authenticate: (username, password) => {\r\n      return new Promise((resolve, reject) => {\r\n        axios.post(constants.baseAddress + '/login', {},\r\n          {\r\n              auth: {\r\n              username: username,\r\n              password: password\r\n            }\r\n          })\r\n          .then(result => {\r\n            userInfo = {\r\n              username: username,\r\n              password: password\r\n            }\r\n            resolve();\r\n          })\r\n          .catch(error =>\r\n            {\r\n              console.log(error);\r\n              reject();\r\n            }\r\n          )\r\n      });\r\n    },\r\n    getAxiosAuth: () => {\r\n      return {\r\n        auth: userInfo\r\n      }\r\n    }\r\n}\r\n\r\nexport default myAuth;"]},"metadata":{},"sourceType":"module"}