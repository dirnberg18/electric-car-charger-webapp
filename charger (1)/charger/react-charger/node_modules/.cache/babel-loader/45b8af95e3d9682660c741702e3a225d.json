{"ast":null,"code":"var _jsxFileName = \"C:\\\\oamk\\\\web-frameworks\\\\charger\\\\react-charger\\\\src\\\\Components\\\\ProtectedRoute.js\";\nimport React from 'react'; // import Auth from './components/Auth';\n\nimport { Redirect, Route } from \"react-router-dom\";\nexport default function UserView(props) {\n  const {\n    isAuthenticated,\n    ...rest\n  } = props;\n  let output;\n\n  if (isAuthenticated) {\n    output = /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 14\n      }\n    }));\n  } else {\n    output = /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 14\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 10\n    }\n  }, output); //eventuell rausnehmen aber sonst übernehmen\n}","map":{"version":3,"sources":["C:/oamk/web-frameworks/charger/react-charger/src/Components/ProtectedRoute.js"],"names":["React","Redirect","Route","UserView","props","isAuthenticated","rest","output"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACtC,QAAM;AAAEC,IAAAA,eAAF;AAAmB,OAAGC;AAAtB,MAA+BF,KAArC;AACA,MAAIG,MAAJ;;AAEA,MAAGF,eAAH,EACA;AACEE,IAAAA,MAAM,gBAAG,oBAAC,KAAD,oBAAWD,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAT;AACD,GAHD,MAKA;AACEC,IAAAA,MAAM,gBAAG,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAT;AACD;;AAED,sBAAO,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBA,MAAlB,CAAP,CAbsC,CAaa;AACpD","sourcesContent":["import React from 'react'\r\n// import Auth from './components/Auth';\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nexport default function UserView(props) {\r\n  const { isAuthenticated, ...rest } = props;\r\n  let output;\r\n\r\n  if(isAuthenticated)\r\n  {\r\n    output = <Route {...rest} />\r\n  }\r\n  else\r\n  {\r\n    output = <Redirect to='/' />;\r\n  }\r\n\r\n  return <React.Fragment>{ output }</React.Fragment> //eventuell rausnehmen aber sonst übernehmen\r\n}"]},"metadata":{},"sourceType":"module"}